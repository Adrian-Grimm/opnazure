{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "allowedValues":[
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_B1s",
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_B4ms",
        "Standard_F1s",
        "Standard_F2s",
        "Standard_F4s",
        "Standard_DS1_v2"
      ],
      "metadata": {
        "description": "VM size, please choose a size which allow 2 NICs."
      }
    },
    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "OPN NVA Manchine Name"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Default Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Default Admin password"
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "metadata": {
      "description": "Existing Virtual Nework Name"
      }
    },
    "existingSubnetName1": {
      "type": "string",
      "metadata": {
      "description": "Type Existing (Untrusted) Subnet Name"
       }
    },
    "networkInterfaceName1": {
      "type": "string",
      "metadata": {
      "description": "NIC1 - Untrusted"
       }
      },
    "existingSubnetName2": {
      "type": "string",
       "metadata": {
       "description": "Type Existing (Trusted) Subnet Name"
          }
      },
    "networkInterfaceName2": {
       "type": "string",
       "metadata": {
         "description": "NIC2 - Trusted"
         }
    }
  },
  "variables": {
    "extensionName":"CustomScript",
    "publicIPAddressName": "[concat(parameters('virtualMachineName'),'-PublicIP')]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('existingSubnetName1'))]",
    "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('existingSubnetName2'))]",
    "location": "[resourceGroup().location]",
    "_artifactsLocation": "https://raw.githubusercontent.com/dmauser/opnazure/master/",
    "baseUriAzureCloud": "[variables('_artifactsLocation')]"
  },
  "resources": [
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[variables('location')]",
      "comments": "This is the virtual machine that you're building.",
      "dependsOn": [
        "[parameters('networkInterfaceName1')]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftOSTC",
            "offer": "FreeBSD",
            "sku": "11.2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName1'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName2'))]"
              }
          ]
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceName1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-06-01",
      "location": "[variables('location')]",
      "comments": "This will be your Primary NIC Untrusted",
      "dependsOn": [
        "[variables('publicIpAddressName')]"
      ],
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ]
      }
    },
    {
        "name": "[parameters('networkInterfaceName2')]",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2017-06-01",
        "location": "[variables('location')]",
        "comments": "This will be your NIC2 Trusted",
        "properties": {
          "enableIPForwarding": true,
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[variables('subnet2Ref')]"
                },
                "privateIPAllocationMethod": "Dynamic"
              }
            }
          ]
        }
      },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-06-01",
      "location": "[variables('location')]",
      "comments": "Public IP for your Primary NIC",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'), '/', variables('extensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": false,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/dmauser/opnazure/master/scripts/configureopnsense.sh"
          ],
          "commandToExecute": "sh configureopnsense.sh"
        }        
      }
    }
  ],
  "outputs": {}
}